@model jScore3.Models.Zawodnik

@{
    ViewBag.Title = "Edycja";
}

<div class="jumbotron myjumbotron">
    <h2>@ViewData.Model.Imie @ViewData.Model.Nazwisko</h2>
</div>


<div class="row">
@using (Html.BeginForm("Edit", "Zawodniks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="col-md-9">
            <h4>Zawodnik</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Imie, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Imie, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Imie, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nazwisko, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nazwisko, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Nazwisko, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KrajPochodzenia, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KrajPochodzenia, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.KrajPochodzenia, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataUrodzenia, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataUrodzenia, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.DataUrodzenia, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Wzrost, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Wzrost, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Wzrost, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Waga, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Waga, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Waga, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumerKoszulki, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumerKoszulki, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.NumerKoszulki, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KlubId, "Klub", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("KlubId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.KlubId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zdjecie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="zdjecieZawodnik" />
                    @Html.ValidationMessageFor(model => model.Klub.Nazwa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Zapisz zmiany" class="btn btn-success btn-warning-my" />
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <h4>Aktualne zdjęcie</h4>
        <hr />
        @if (File.Exists(Server.MapPath("~/Images/Zawodnicy/" + Html.DisplayFor(model => model.Zdjecie))))
        {
            <img src="~/Images/Zawodnicy/@Model.Zdjecie" alt="" class="img-responsive img-thumbnail center-block" />
        }
        else
        {
            <img src="~/Images/noimage.jpg" alt="Brak zdjecia" class="img-responsive" />
        }
    </div>
}
    </div>
    <div>
        @Html.ActionLink("Powrót do listy", "Index", null, null, new { @class = "btn btn-warning" })
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
